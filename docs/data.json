{
    "project": {
        "name": "<json:package.json>",
        "description": "<json:package.json>",
        "version": "<json:package.json>",
        "url": "<json:package.json>"
    },
    "files": {
        "jatasets\\dictionary.js": {
            "name": "jatasets\\dictionary.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\index.js": {
            "name": "jatasets\\index.js",
            "modules": {
                "jatasets": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\list.js": {
            "name": "jatasets\\list.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\queue.js": {
            "name": "jatasets\\queue.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\set.js": {
            "name": "jatasets\\set.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\stack.js": {
            "name": "jatasets\\stack.js",
            "modules": {},
            "classes": {
                "": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "jatasets": {
            "name": "jatasets",
            "submodules": {},
            "classes": {
                "": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "jatasets\\stack.js",
            "line": 5,
            "description": "JataSets module."
        }
    },
    "classes": {
        "": {
            "file": "jatasets\\stack.js",
            "line": 5,
            "description": "Creates a new Stack Object",
            "module": "jatasets"
        }
    },
    "classitems": [
        {
            "file": "jatasets\\dictionary.js",
            "line": 11,
            "class": ""
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 14,
            "class": ""
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 18,
            "description": "Method to get instance of last element put on stack",
            "params": [
                {
                    "name": "key",
                    "description": "index value to store value under",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "value",
                    "description": "item being stored",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 38,
            "description": "Method to remove item from the dictionary",
            "params": [
                {
                    "name": "key",
                    "description": "index of item to be removed",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 57,
            "description": "Method to retrieve value from dictionary using the key",
            "params": [
                {
                    "name": "key",
                    "description": "index search for in dictionary",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "return item if successful and false if key is not valid",
                "type": "Mixed"
            },
            "class": ""
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 74,
            "description": "Method to get current number of items in dictionary",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": ""
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 84,
            "description": "Method to clear all values from dictionary",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "jatasets\\index.js",
            "line": 14,
            "description": "Create new Dictionary dataset object and return.",
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\index.js",
            "line": 21,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\index.js",
            "line": 26,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\index.js",
            "line": 31,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\index.js",
            "line": 36,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 11,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 14,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 17,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 20,
            "description": "Private method to append an element to the list",
            "memberof": "List",
            "params": [
                {
                    "name": "element",
                    "description": "The element being appended to the list",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 35,
            "description": "Private method to find an element in the list.  Will either return\nelement index if found and false if not found.",
            "memberof": "List",
            "params": [
                {
                    "name": "element",
                    "description": "The element being appended to the list",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 59,
            "description": "Method to reset list.",
            "memberof": "List",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 73,
            "description": "Method to retrieve list as comma seperate string",
            "memberof": "List",
            "return": {
                "description": "list as comma serperate string",
                "type": "String"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 85,
            "description": "Method to retrieve list as JSON string",
            "memberof": "List",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 97,
            "description": "Method to add element to list",
            "memberof": "List",
            "params": [
                {
                    "name": "element",
                    "description": "The element you wish to place",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 117,
            "description": "Method to insert element after another element",
            "memberof": "List",
            "params": [
                {
                    "name": "element",
                    "description": "The element you wish to place",
                    "type": "Mixed"
                },
                {
                    "name": "after",
                    "description": "The element you wish to place after",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 140,
            "description": "Method to remove element from list",
            "memberof": "List",
            "params": [
                {
                    "name": "element",
                    "description": "The element to be removed",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 163,
            "description": "Method to move current this.position to the beginning of the list",
            "memberof": "List",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 176,
            "description": "Method to move current this.position to the end of the list",
            "memberof": "List",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 189,
            "description": "Method to move current this.position in list to previous element",
            "memberof": "List",
            "return": {
                "description": "",
                "type": "Integer|Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 207,
            "description": "Method to move current this.position in list to next element",
            "memberof": "List",
            "return": {
                "description": "",
                "type": "Integer|boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 225,
            "description": "Method to get current number of elements in the list",
            "memberof": "List",
            "return": {
                "description": "number of elements in the list",
                "type": "Integer"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 237,
            "description": "Method to get current this.position in the list",
            "memberof": "List",
            "return": {
                "description": "current this.possition in th elist",
                "type": "Integer"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 249,
            "description": "Method to move current this.position in the list to specific this.position\nand validating the this.position provided",
            "memberof": "List",
            "params": [
                {
                    "name": "this.position",
                    "description": "- The this.position to move to in the list",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 270,
            "description": "Method to get element at current this.position in the list",
            "memberof": "List",
            "return": {
                "description": "element in the current this.position",
                "type": "Mixed"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 282,
            "description": "Method to determine if list contains an element",
            "memberof": "List",
            "params": [
                {
                    "name": "element",
                    "description": "- The element to verify if in list",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 11,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 14,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 17,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 21,
            "description": "Method to Queue an element to the Queue",
            "memberof": "Queue",
            "params": [
                {
                    "name": "element",
                    "description": "being added to Queue",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 44,
            "description": "Method to remove an element from the Queue",
            "memberof": "Queue",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 62,
            "description": "Method to retrieve element in front of Queue",
            "memberof": "Queue",
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 80,
            "description": "Method to retrieve element in back of Queue",
            "memberof": "Queue",
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 91,
            "description": "Method to verify if Queue is empty",
            "memberof": "Queue",
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 107,
            "description": "Method to retrieve Queue as string with line breaks",
            "memberof": "Queue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 26,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 29,
            "description": "Private utility method to determine if value exists in the set",
            "params": [
                {
                    "name": "element",
                    "description": "The element being appended to the set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 42,
            "description": "Method to add value to set",
            "params": [
                {
                    "name": "value",
                    "description": "value being added to the set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 61,
            "description": "Method to remove value from set",
            "params": [
                {
                    "name": "value",
                    "description": "Value being removed from the set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 79,
            "description": "Method to verify if a value is in the set",
            "params": [
                {
                    "name": "value",
                    "description": "value to test if exists in set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 91,
            "description": "Method to clear all values from the set",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 102,
            "description": "Method to get current size of set",
            "return": {
                "description": "number of values in set",
                "type": "Integer"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 122,
            "description": "Method to retrieve all values in the set",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 143,
            "description": "Method to retrieve all values in the set",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 172,
            "description": "Method to retrieve all values in the set",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 196,
            "description": "Method to retrieve all values in the set",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 220,
            "description": "Method to retrieve all values in the set",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 11,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 14,
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 19,
            "description": "Method to reset stack.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 30,
            "description": "Method to get instance of last element put on stack",
            "return": {
                "description": "last item placed on stack",
                "type": "Mixed"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 45,
            "description": "Method to remove last element put on stack",
            "return": {
                "description": "removed item from top of stack",
                "type": "Mixed"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 55,
            "description": "Method to push new element onto stack",
            "params": [
                {
                    "name": "element",
                    "description": "The element to push onto stack",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 73,
            "description": "Method to get current number of elements in the stack",
            "return": {
                "description": "number of elements in the stack",
                "type": "Integer"
            },
            "class": "",
            "module": "jatasets"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\dictionary.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\dictionary.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\dictionary.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\dictionary.js:74"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:20"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:35"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:59"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:59"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:73"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:85"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:97"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:117"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:140"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:140"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:163"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:176"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:176"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:189"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:189"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:207"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:207"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:225"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:237"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:237"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:249"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:270"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:270"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:282"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\list.js:282"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\queue.js:21"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\queue.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\queue.js:44"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\queue.js:62"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\queue.js:80"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\queue.js:91"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\queue.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\queue.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:61"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:79"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:91"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:172"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:196"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\set.js:220"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\stack.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\stack.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\stack.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\stack.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jatasets\\stack.js:73"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\dictionary.js:11"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\dictionary.js:14"
        },
        {
            "message": "Missing item type\nMethod to get instance of last element put on stack",
            "line": " jatasets\\dictionary.js:18"
        },
        {
            "message": "Missing item type\nMethod to remove item from the dictionary",
            "line": " jatasets\\dictionary.js:38"
        },
        {
            "message": "Missing item type\nMethod to retrieve value from dictionary using the key",
            "line": " jatasets\\dictionary.js:57"
        },
        {
            "message": "Missing item type\nMethod to get current number of items in dictionary",
            "line": " jatasets\\dictionary.js:74"
        },
        {
            "message": "Missing item type\nMethod to clear all values from dictionary",
            "line": " jatasets\\dictionary.js:84"
        },
        {
            "message": "Missing item type\nCreate new Dictionary dataset object and return.",
            "line": " jatasets\\index.js:14"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\index.js:21"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\index.js:26"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\index.js:31"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\index.js:36"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\list.js:11"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\list.js:14"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\list.js:17"
        },
        {
            "message": "Missing item type\nPrivate method to append an element to the list",
            "line": " jatasets\\list.js:20"
        },
        {
            "message": "Missing item type\nPrivate method to find an element in the list.  Will either return\nelement index if found and false if not found.",
            "line": " jatasets\\list.js:35"
        },
        {
            "message": "Missing item type\nMethod to reset list.",
            "line": " jatasets\\list.js:59"
        },
        {
            "message": "Missing item type\nMethod to retrieve list as comma seperate string",
            "line": " jatasets\\list.js:73"
        },
        {
            "message": "Missing item type\nMethod to retrieve list as JSON string",
            "line": " jatasets\\list.js:85"
        },
        {
            "message": "Missing item type\nMethod to add element to list",
            "line": " jatasets\\list.js:97"
        },
        {
            "message": "Missing item type\nMethod to insert element after another element",
            "line": " jatasets\\list.js:117"
        },
        {
            "message": "Missing item type\nMethod to remove element from list",
            "line": " jatasets\\list.js:140"
        },
        {
            "message": "Missing item type\nMethod to move current this.position to the beginning of the list",
            "line": " jatasets\\list.js:163"
        },
        {
            "message": "Missing item type\nMethod to move current this.position to the end of the list",
            "line": " jatasets\\list.js:176"
        },
        {
            "message": "Missing item type\nMethod to move current this.position in list to previous element",
            "line": " jatasets\\list.js:189"
        },
        {
            "message": "Missing item type\nMethod to move current this.position in list to next element",
            "line": " jatasets\\list.js:207"
        },
        {
            "message": "Missing item type\nMethod to get current number of elements in the list",
            "line": " jatasets\\list.js:225"
        },
        {
            "message": "Missing item type\nMethod to get current this.position in the list",
            "line": " jatasets\\list.js:237"
        },
        {
            "message": "Missing item type\nMethod to move current this.position in the list to specific this.position\nand validating the this.position provided",
            "line": " jatasets\\list.js:249"
        },
        {
            "message": "Missing item type\nMethod to get element at current this.position in the list",
            "line": " jatasets\\list.js:270"
        },
        {
            "message": "Missing item type\nMethod to determine if list contains an element",
            "line": " jatasets\\list.js:282"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\queue.js:11"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\queue.js:14"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\queue.js:17"
        },
        {
            "message": "Missing item type\nMethod to Queue an element to the Queue",
            "line": " jatasets\\queue.js:21"
        },
        {
            "message": "Missing item type\nMethod to remove an element from the Queue",
            "line": " jatasets\\queue.js:44"
        },
        {
            "message": "Missing item type\nMethod to retrieve element in front of Queue",
            "line": " jatasets\\queue.js:62"
        },
        {
            "message": "Missing item type\nMethod to retrieve element in back of Queue",
            "line": " jatasets\\queue.js:80"
        },
        {
            "message": "Missing item type\nMethod to verify if Queue is empty",
            "line": " jatasets\\queue.js:91"
        },
        {
            "message": "Missing item type\nMethod to retrieve Queue as string with line breaks",
            "line": " jatasets\\queue.js:107"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\set.js:26"
        },
        {
            "message": "Missing item type\nPrivate utility method to determine if value exists in the set",
            "line": " jatasets\\set.js:29"
        },
        {
            "message": "Missing item type\nMethod to add value to set",
            "line": " jatasets\\set.js:42"
        },
        {
            "message": "Missing item type\nMethod to remove value from set",
            "line": " jatasets\\set.js:61"
        },
        {
            "message": "Missing item type\nMethod to verify if a value is in the set",
            "line": " jatasets\\set.js:79"
        },
        {
            "message": "Missing item type\nMethod to clear all values from the set",
            "line": " jatasets\\set.js:91"
        },
        {
            "message": "Missing item type\nMethod to get current size of set",
            "line": " jatasets\\set.js:102"
        },
        {
            "message": "Missing item type\nMethod to retrieve all values in the set",
            "line": " jatasets\\set.js:122"
        },
        {
            "message": "Missing item type\nMethod to retrieve all values in the set",
            "line": " jatasets\\set.js:143"
        },
        {
            "message": "Missing item type\nMethod to retrieve all values in the set",
            "line": " jatasets\\set.js:172"
        },
        {
            "message": "Missing item type\nMethod to retrieve all values in the set",
            "line": " jatasets\\set.js:196"
        },
        {
            "message": "Missing item type\nMethod to retrieve all values in the set",
            "line": " jatasets\\set.js:220"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\stack.js:11"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\stack.js:14"
        },
        {
            "message": "Missing item type\nMethod to reset stack.",
            "line": " jatasets\\stack.js:19"
        },
        {
            "message": "Missing item type\nMethod to get instance of last element put on stack",
            "line": " jatasets\\stack.js:30"
        },
        {
            "message": "Missing item type\nMethod to remove last element put on stack",
            "line": " jatasets\\stack.js:45"
        },
        {
            "message": "Missing item type\nMethod to push new element onto stack",
            "line": " jatasets\\stack.js:55"
        },
        {
            "message": "Missing item type\nMethod to get current number of elements in the stack",
            "line": " jatasets\\stack.js:73"
        }
    ]
}