{
    "project": {
        "name": "<json:package.json>",
        "description": "<json:package.json>",
        "version": "<json:package.json>",
        "url": "<json:package.json>"
    },
    "files": {
        "jatasets\\dictionary.js": {
            "name": "jatasets\\dictionary.js",
            "modules": {},
            "classes": {
                "Dictionary": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\index.js": {
            "name": "jatasets\\index.js",
            "modules": {
                "dictionary": 1,
                "queue": 1,
                "list": 1,
                "set": 1,
                "stack": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\list.js": {
            "name": "jatasets\\list.js",
            "modules": {
                "jatasets": 1
            },
            "classes": {
                "List": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\queue.js": {
            "name": "jatasets\\queue.js",
            "modules": {},
            "classes": {
                "Queue": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\set.js": {
            "name": "jatasets\\set.js",
            "modules": {},
            "classes": {
                "Set": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jatasets\\stack.js": {
            "name": "jatasets\\stack.js",
            "modules": {},
            "classes": {
                "Stack": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "jatasets": {
            "name": "jatasets",
            "submodules": {
                "dictionary": 1,
                "queue": 1,
                "list": 1,
                "set": 1,
                "stack": 1
            },
            "classes": {
                "Dictionary": 1,
                "List": 1,
                "Queue": 1,
                "Set": 1,
                "Stack": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "jatasets\\stack.js",
            "line": 1,
            "description": "Creates a new List Data object",
            "itemtype": "main"
        },
        "dictionary": {
            "name": "dictionary",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\index.js",
            "line": 14,
            "description": "Create new Dictionary dataset object and return."
        },
        "queue": {
            "name": "queue",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\index.js",
            "line": 24
        },
        "list": {
            "name": "list",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\index.js",
            "line": 33
        },
        "set": {
            "name": "set",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\index.js",
            "line": 42
        },
        "stack": {
            "name": "stack",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\index.js",
            "line": 51
        }
    },
    "classes": {
        "Dictionary": {
            "name": "Dictionary",
            "shortname": "Dictionary",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jatasets",
            "file": "jatasets\\dictionary.js",
            "line": 1,
            "description": "JavaScript data structure object use to store key, value\npairs, where as the key is used to store and retrieve a\nparticular element.",
            "mainName": "jatasets",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "List": {
            "name": "List",
            "shortname": "List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\list.js",
            "line": 1,
            "description": "Creates a new List Data object",
            "mainName": "jatasets",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Queue": {
            "name": "Queue",
            "shortname": "Queue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\queue.js",
            "line": 1,
            "description": "Creates a new Queue Data object",
            "mainName": "jatasets",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Set": {
            "name": "Set",
            "shortname": "Set",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\set.js",
            "line": 1,
            "description": "JavaScript data structure object representing a collection of\nunordered, unique elements.  The data structure is similar to\nthe mathematical concept of finite sets, but instead applied\nas a JavaScript object.  A set should be viewed as an array\nwith no repeated elements and with no concept or order.\n\nThe purpose of the Set object is to provide developers a tool\nto manage both individual sets by adding and removing elements,\nbut a means to run comparison operations against two Set objects.",
            "mainName": "jatasets",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Stack": {
            "name": "Stack",
            "shortname": "Stack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jatasets",
            "namespace": "",
            "file": "jatasets\\stack.js",
            "line": 1,
            "description": "Creates a new Stack Data object",
            "mainName": "jatasets",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        }
    },
    "classitems": [
        {
            "file": "jatasets\\dictionary.js",
            "line": 14,
            "description": "Creates a new Dictionary",
            "is_constructor": 1,
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 21,
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 24,
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 28,
            "description": "Method to get instance of last element put on stack",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "key",
                    "description": "index value to store value under",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "value",
                    "description": "item being stored",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 50,
            "description": "Method to remove item from the dictionary",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "key",
                    "description": "index of item to be removed",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 71,
            "description": "Method to retrieve value from dictionary using the key",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "key",
                    "description": "index search for in dictionary",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "return item if successful and false if key is not valid",
                "type": "Mixed"
            },
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 90,
            "description": "Method to get current number of items in dictionary",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\dictionary.js",
            "line": 102,
            "description": "Method to clear all values from dictionary",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Dictionary"
        },
        {
            "file": "jatasets\\list.js",
            "line": 12,
            "description": "Creates a new List Object",
            "is_constructor": 1,
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 18,
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 21,
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 24,
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 27,
            "description": "Private method to append an element to the list",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "element",
                    "description": "The element being appended to the list",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 43,
            "description": "Private method to find an element in the list.  Will either return\nelement index if found and false if not found.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "element",
                    "description": "The element being appended to the list",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 68,
            "description": "Method to reset list.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 82,
            "description": "Method to retrieve list as comma seperate string",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "list as comma serperate string",
                "type": "String"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 94,
            "description": "Method to retrieve list as JSON string",
            "memberof": "toJson",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 106,
            "description": "Method to add element to list",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "element",
                    "description": "The element you wish to place",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 126,
            "description": "Method to insert element after another element",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "element",
                    "description": "The element you wish to place",
                    "type": "Mixed"
                },
                {
                    "name": "after",
                    "description": "The element you wish to place after",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 149,
            "description": "Method to remove element from list",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "element",
                    "description": "The element to be removed",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 172,
            "description": "Method to move current this.position to the beginning of the list",
            "itemtype": "method",
            "name": "front",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 185,
            "description": "Method to move current this.position to the end of the list",
            "itemtype": "method",
            "name": "end",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 198,
            "description": "Method to move current this.position in list to previous element",
            "itemtype": "method",
            "name": "prev",
            "return": {
                "description": "",
                "type": "Integer|Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 216,
            "description": "Method to move current this.position in list to next element",
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "",
                "type": "Integer|boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 234,
            "description": "Method to get current number of elements in the list",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "number of elements in the list",
                "type": "Integer"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 246,
            "description": "Method to get current this.position in the list",
            "itemtype": "method",
            "name": "current",
            "return": {
                "description": "current this.possition in th elist",
                "type": "Integer"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 258,
            "description": "Method to move current this.position in the list to specific this.position\nand validating the this.position provided",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "this.position",
                    "description": "- The this.position to move to in the list",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 279,
            "description": "Method to get element at current this.position in the list",
            "itemtype": "method",
            "name": "getElement",
            "memberof": "List",
            "return": {
                "description": "element in the current this.position",
                "type": "Mixed"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\list.js",
            "line": 293,
            "description": "Method to determine if list contains an element",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "element",
                    "description": "- The element to verify if in list",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 12,
            "description": "Creates a new Queue",
            "is_constructor": 1,
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 18,
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 21,
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 24,
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 28,
            "description": "Method to Queue an element to the Queue",
            "itemtype": "method",
            "name": "enqueue",
            "params": [
                {
                    "name": "element",
                    "description": "being added to Queue",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 51,
            "description": "Method to remove an element from the Queue",
            "itemtype": "method",
            "name": "dequeue",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 69,
            "description": "Method to retrieve element in front of Queue",
            "itemtype": "method",
            "name": "front",
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 87,
            "description": "Method to retrieve element in back of Queue",
            "itemtype": "method",
            "name": "back",
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 98,
            "description": "Method to verify if Queue is empty",
            "itemtype": "method",
            "name": "empty",
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\queue.js",
            "line": 114,
            "description": "Method to retrieve Queue as string with line breaks",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Queue",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 20,
            "description": "Creates a new Set Object",
            "is_constructor": 1,
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 26,
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 29,
            "description": "Private utility method to determine if value exists in the set",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "exists",
            "params": [
                {
                    "name": "element",
                    "description": "The element being appended to the set",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 45,
            "description": "Method to add value to set",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "value",
                    "description": "value being added to the set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 66,
            "description": "Method to remove value from set",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "value",
                    "description": "Value being removed from the set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 86,
            "description": "Method to verify if a value is in the set",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "value",
                    "description": "value to test if exists in set",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 100,
            "description": "Method to clear all values from the set",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 113,
            "description": "Method to get current size of set",
            "itemtype": "method",
            "name": "size",
            "return": {
                "description": "number of values in set",
                "type": "Integer"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 135,
            "description": "Method to retrieve all values in the set",
            "itemtype": "method",
            "name": "values",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 165,
            "description": "Method to retrieve all values in the set",
            "itemtype": "method",
            "name": "union",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 196,
            "description": "Method to retrieve all values in the set",
            "itemtype": "method",
            "name": "intersection",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 222,
            "description": "Method to retrieve all values in the set",
            "itemtype": "method",
            "name": "difference",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\set.js",
            "line": 248,
            "description": "Method to retrieve all values in the set",
            "itemtype": "method",
            "name": "subset",
            "return": {
                "description": "values from the set",
                "type": "Object"
            },
            "class": "Set",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 12,
            "description": "Creates a new Stack Object",
            "is_constructor": 1,
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 18,
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 21,
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 26,
            "description": "Method to reset stack.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 39,
            "description": "Method to get instance of last element put on stack",
            "itemtype": "method",
            "name": "peek",
            "return": {
                "description": "last item placed on stack",
                "type": "Mixed"
            },
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 56,
            "description": "Method to remove last element put on stack",
            "itemtype": "method",
            "name": "pop",
            "return": {
                "description": "removed item from top of stack",
                "type": "Mixed"
            },
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 68,
            "description": "Method to push new element onto stack",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "element",
                    "description": "The element to push onto stack",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Stack",
            "module": "jatasets"
        },
        {
            "file": "jatasets\\stack.js",
            "line": 88,
            "description": "Method to get current number of elements in the stack",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "number of elements in the stack",
                "type": "Integer"
            },
            "class": "Stack",
            "module": "jatasets"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:94"
        },
        {
            "message": "unknown tag: memberof",
            "line": " jatasets\\list.js:279"
        },
        {
            "message": "Missing item type\nCreates a new Dictionary",
            "line": " jatasets\\dictionary.js:14"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\dictionary.js:21"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\dictionary.js:24"
        },
        {
            "message": "Missing item type\nCreates a new List Object",
            "line": " jatasets\\list.js:12"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\list.js:18"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\list.js:21"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\list.js:24"
        },
        {
            "message": "Missing item type\nMethod to retrieve list as JSON string",
            "line": " jatasets\\list.js:94"
        },
        {
            "message": "Missing item type\nCreates a new Queue",
            "line": " jatasets\\queue.js:12"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\queue.js:18"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\queue.js:21"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\queue.js:24"
        },
        {
            "message": "Missing item type\nCreates a new Set Object",
            "line": " jatasets\\set.js:20"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\set.js:26"
        },
        {
            "message": "Missing item type\nCreates a new Stack Object",
            "line": " jatasets\\stack.js:12"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\stack.js:18"
        },
        {
            "message": "Missing item type",
            "line": " jatasets\\stack.js:21"
        }
    ]
}